; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\system_nuc121.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\system_nuc121.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\Device\Nuvoton\NUC121\Include -I..\..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 --omf_browse=.\obj\system_nuc121.crf ..\..\..\..\Library\Device\Nuvoton\NUC121\Source\system_NUC121.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;31      */
;;;32     void SystemCoreClockUpdate(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;33     {
;;;34         uint32_t u32Freq, u32ClkSrc;
;;;35         uint32_t u32HclkDiv;
;;;36     
;;;37         u32ClkSrc = CLK->CLKSEL0 & CLK_CLKSEL0_HCLKSEL_Msk;
000002  4d1f              LDR      r5,|L1.128|
000004  6928              LDR      r0,[r5,#0x10]
000006  0744              LSLS     r4,r0,#29
000008  a01e              ADR      r0,|L1.132|
00000a  6800              LDR      r0,[r0,#0]
00000c  9000              STR      r0,[sp,#0]
00000e  6a29              LDR      r1,[r5,#0x20]
000010  0f64              LSRS     r4,r4,#29
000012  1328              ASRS     r0,r5,#12
000014  4201              TST      r1,r0
000016  d001              BEQ      |L1.28|
000018  2000              MOVS     r0,#0                 ;33
00001a  e018              B        |L1.78|
                  |L1.28|
00001c  2011              MOVS     r0,#0x11              ;33
00001e  04c0              LSLS     r0,r0,#19             ;33
000020  4201              TST      r1,r0                 ;33
000022  d001              BEQ      |L1.40|
000024  4818              LDR      r0,|L1.136|
000026  e000              B        |L1.42|
                  |L1.40|
000028  4818              LDR      r0,|L1.140|
                  |L1.42|
00002a  038a              LSLS     r2,r1,#14             ;33
00002c  d40f              BMI      |L1.78|
00002e  040a              LSLS     r2,r1,#16             ;33
000030  0f92              LSRS     r2,r2,#30             ;33
000032  466b              MOV      r3,sp                 ;33
000034  5c9b              LDRB     r3,[r3,r2]            ;33
000036  05ca              LSLS     r2,r1,#23             ;33
000038  0489              LSLS     r1,r1,#18             ;33
00003a  0dd2              LSRS     r2,r2,#23             ;33
00003c  0ec9              LSRS     r1,r1,#27             ;33
00003e  1c89              ADDS     r1,r1,#2              ;33
000040  0880              LSRS     r0,r0,#2              ;33
000042  1c92              ADDS     r2,r2,#2              ;33
000044  4359              MULS     r1,r3,r1              ;33
000046  4350              MULS     r0,r2,r0              ;33
000048  f7fffffe          BL       __aeabi_uidivmod
00004c  0080              LSLS     r0,r0,#2              ;33
                  |L1.78|
;;;38     
;;;39         /* Update PLL Clock */
;;;40         PllClock = CLK_GetPLLClockFreq();
00004e  4e10              LDR      r6,|L1.144|
;;;41     
;;;42     
;;;43         switch (u32ClkSrc)
000050  2c02              CMP      r4,#2
000052  60b0              STR      r0,[r6,#8]  ; PllClock
000054  d004              BEQ      |L1.96|
000056  2c05              CMP      r4,#5
000058  d010              BEQ      |L1.124|
;;;44         {
;;;45         case CLK_CLKSEL0_HCLKSEL_PLL:
;;;46             u32Freq = PllClock;
;;;47             break;
;;;48     
;;;49         case CLK_CLKSEL0_HCLKSEL_PLL_DIV2:
;;;50             u32Freq = PllClock / 2;
;;;51             break;
;;;52     
;;;53         default:
;;;54             u32Freq = gau32ClkSrcTbl[u32ClkSrc];
00005a  490e              LDR      r1,|L1.148|
00005c  00a0              LSLS     r0,r4,#2
00005e  5808              LDR      r0,[r1,r0]
                  |L1.96|
;;;55         }
;;;56     
;;;57     
;;;58         u32HclkDiv = (CLK->CLKDIV0 & CLK_CLKDIV0_HCLKDIV_Msk) + 1;
000060  69a9              LDR      r1,[r5,#0x18]
000062  0709              LSLS     r1,r1,#28
000064  0f09              LSRS     r1,r1,#28
000066  1c49              ADDS     r1,r1,#1
;;;59     
;;;60         /* Update System Core Clock */
;;;61         SystemCoreClock = u32Freq / u32HclkDiv;
000068  f7fffffe          BL       __aeabi_uidivmod
;;;62     
;;;63         CyclesPerUs = (SystemCoreClock + 500000) / 1000000;
00006c  490a              LDR      r1,|L1.152|
00006e  6030              STR      r0,[r6,#0]  ; SystemCoreClock
000070  104a              ASRS     r2,r1,#1
000072  1880              ADDS     r0,r0,r2
000074  f7fffffe          BL       __aeabi_uidivmod
000078  6070              STR      r0,[r6,#4]  ; CyclesPerUs
;;;64     }
00007a  bdf8              POP      {r3-r7,pc}
                  |L1.124|
00007c  0840              LSRS     r0,r0,#1              ;50
00007e  e7ef              B        |L1.96|
;;;65     
                          ENDP

                  |L1.128|
                          DCD      0x50000200
                  |L1.132|
000084  01020204          DCB      1,2,2,4
                  |L1.136|
                          DCD      0x016e3600
                  |L1.140|
                          DCD      0x00b71b00
                  |L1.144|
                          DCD      ||.data||
                  |L1.148|
                          DCD      ||.constdata||
                  |L1.152|
                          DCD      0x000f4240

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=1

                  SystemInit PROC
;;;75      */
;;;76     void SystemInit(void)
000000  4770              BX       lr
;;;77     {
;;;78     #ifdef INIT_SYSCLK_AT_BOOTING
;;;79         int32_t i32TimeoutCnt;
;;;80         uint32_t u32HclkSelect;
;;;81         int8_t i8IsPllEn;
;;;82     
;;;83         PllClock = 0;
;;;84         i8IsPllEn = 0;
;;;85         u32HclkSelect = CLK->CLKSEL0 & CLK_CLKSEL0_HCLKSEL_Msk;
;;;86     
;;;87         if (u32HclkSelect == CLK_CLKSEL0_HCLKSEL_HXT)
;;;88         {
;;;89             /* Set to 50MHz system clock frequency when clock source is from external 12MHz X'Tal*/
;;;90             CLK->PLLCTL = CLK_PLLCTL_50MHz_HXT;
;;;91     
;;;92             /* Waiting for PLL ready */
;;;93             i32TimeoutCnt = (__HXT / 1000); /* Timeout is about 1ms */
;;;94     
;;;95             while ((CLK->STATUS & CLK_STATUS_PLLSTB_Msk) == 0)
;;;96             {
;;;97                 if (i32TimeoutCnt-- <= 0)
;;;98                     break;
;;;99             }
;;;100    
;;;101            i8IsPllEn = 1;
;;;102        }
;;;103        else if (u32HclkSelect == CLK_CLKSEL0_HCLKSEL_HIRC_DIV2)
;;;104        {
;;;105            /* Set to 50MHz system clock frequency when clock source is from internal 48MHz RC clock */
;;;106            CLK->PLLCTL = CLK_PLLCTL_50MHz_HIRC_DIV2;
;;;107    
;;;108            /* Waiting for PLL ready */
;;;109            i32TimeoutCnt = (__HIRC_DVI2 / 1000); /* Timeout is about 1ms */
;;;110    
;;;111            while ((CLK->STATUS & CLK_STATUS_PLLSTB_Msk) == 0)
;;;112            {
;;;113                if (i32TimeoutCnt-- <= 0)
;;;114                    break;
;;;115            }
;;;116    
;;;117            i8IsPllEn = 1;
;;;118        }
;;;119    
;;;120        if (i8IsPllEn)
;;;121        {
;;;122            /* Set PLL as HCLK clock source (HCLK_S is locked setting)*/
;;;123            SYS_UnlockReg();
;;;124            CLK->CLKSEL0 = CLK_CLKSEL0_HCLKSEL_PLL;
;;;125            SYS_LockReg();
;;;126        }
;;;127    
;;;128    #endif
;;;129    }
;;;130    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  gau32ClkSrcTbl
                          DCD      0x00b71b00
                          DCD      0x00008000
                          DCD      0x05b8d800
                          DCD      0x00002710
                          DCD      0x02dc6c00
                          DCD      0x02dc6c00
                          DCD      0x00000000
                          DCD      0x016e3600

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x05b8d800
                  CyclesPerUs
                          DCD      0x00000060
                  PllClock
                          DCD      0x05b8d800

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Library\\Device\\Nuvoton\\NUC121\\Source\\system_NUC121.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_system_NUC121_c_5d646a67____REV16|
#line 464 "..\\..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___15_system_NUC121_c_5d646a67____REV16| PROC
#line 465

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_system_NUC121_c_5d646a67____REVSH|
#line 479
|__asm___15_system_NUC121_c_5d646a67____REVSH| PROC
#line 480

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
